name: pypi-and-gh-release

on:
  workflow_call:
    inputs:
      pypitarget:
        description: 'Target PyPI repository'
        required: false
        default: 'pypi'
        type: string

jobs:
  build-publish:
    name: Build and publish to PyPI
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.pypitarget }}
      url: ${{ inputs.pypitarget == 'pypi' && 'https://pypi.org/p/changedetection-tui' || 'https://test.pypi.org/p/changedetection-tui' }}

    permissions:
      # - id-token: write — required for OIDC-based Trusted Publisher.
      id-token: write
      # - contents: write — to create a GitHub Release with notes.
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up uv
        uses: astral-sh/setup-uv@v7
        with:
          enable-cache: true

      - name: Sync dependencies (no dev)
        run: uv sync --frozen

      - name: Build artifacts (sdist + wheel)
        run: uv build

      - name: test
        run: echo "${{ inputs.pypitarget == 'pypi' && 'https://upload.pypi.org/legacy/' || 'https://test.pypi.org/legacy/' }}"

      - name: Publish to PyPI (Trusted Publisher)
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: ${{ inputs.pypitarget == 'pypi' && 'https://upload.pypi.org/legacy/' || 'https://test.pypi.org/legacy/' }}
          verbose: true

      - name: Extract changelog for this release
        if: github.ref_type == 'tag'
        run: |
          CURRENT_VERSION=$(uv version --short)
          echo "Extracting changelog for version: ${CURRENT_VERSION}"

          # Extract the section for current version from CHANGELOG.md
          # This gets everything from "## VERSION" until the next "## " or EOF
          awk "/^## ${CURRENT_VERSION}/{flag=1; next} /^## /{flag=0} flag" CHANGELOG.md > release_notes.md

          # Fail if no content was extracted
          if [ ! -s release_notes.md ]; then
            echo "ERROR: No changelog content found for version ${CURRENT_VERSION} in CHANGELOG.md"
            echo "Make sure CHANGELOG.md has a section starting with: ## ${CURRENT_VERSION}"
            exit 1
          fi

          echo "Release notes content:"
          cat release_notes.md

      - name: Create GitHub Release with changelog
        if: github.ref_type == 'tag'
        uses: softprops/action-gh-release@v2
        with:
          body_path: release_notes.md
